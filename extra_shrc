#makes some shortcuts available for vim instead for shell
stty -ixon

# VI input mode
set -o vi

#nvbn/thefuck
command -v thefuck >/dev/null 2>&1 && eval "$(thefuck --alias)"

command -v hub >/dev/null 2>&1 && eval "$(hub alias -s)"

command -v bat >/dev/null 2>&1 && alias cat=bat

# General, safe setup for bash/zsh acc. to https://direnv.net/ (section Setup)
command -v direnv >/dev/null 2>&1 && eval "$(direnv hook "$(basename "$SHELL")")"

[ -e "$WORKON_HOME"/virtualenvwrapper/bin/virtualenvwrapper.sh ] && . "$WORKON_HOME"/virtualenvwrapper/bin/virtualenvwrapper.sh

#http://askubuntu.com/questions/362280/enter-ssh-passphrase-once
SSH_ENV=$HOME/.ssh/env
if [ ! -e "$SSH_ENV" ]; then
    mkdir -p $HOME/.ssh
    touch "$SSH_ENV"
fi
function start_agent {
    # spawn ssh-agent
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add
}

if [ -f "${SSH_ENV}" ]; then
     . "${SSH_ENV}" > /dev/null
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
        start_agent;
    }
else
    start_agent;
fi

man() {
    # Colored man pages
    # https://github.com/Bash-it/bash-it/blob/867b0fd11c6a3ee8c399d963ccfbb942bac74bb6/plugins/available/man.plugin.bash
    LESS_TERMCAP_mb=$'\e[1;32m' \
    LESS_TERMCAP_md=$'\e[1;32m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[1;4;31m' \
    /usr/bin/man \
    "$@"
}

installed() {
    # check for installed package; all options passed to fzf
    dpkg --list | fzf --multi "$@"
}

backup_reminder() {
    # nag me if last backup was more than two weeks ago
    local backup_dates_file=~/.config/borg/backup_dates
    local today=$(date +%s)
    if [[ -e $backup_dates_file ]]; then
        local last_backup=$(tail -n1 $backup_dates_file)
        if [[ $(($today - $last_backup)) -gt 1209600 ]]; then
            echo -e "\033[0;31m!!! >>> TIME TO BACKUP <<< !!!\n\033[0m"
        fi
    fi
}
backup_reminder

gu() {
    # Git clone URL from clipboard, then change into directory
    local repo
    repo=$(xclip -selection clipboard -o)
    git clone $repo && cd $(basename $repo)
}

wt() {
    # Watson log of Today incl. summary
    watson log --day --no-pager --current "$@"
    watson report --day --no-pager --current "$@" | tail -n1
}

wy() {
    # Watson log of Yesterday incl. summary
    local yesterdate=$(date --date yesterday +%F)
    watson log --from $yesterdate --to $yesterdate --no-pager
    watson report --from $yesterdate --to $yesterdate --no-pager | tail -n1
}

dcleanup(){
    # Cleanup unused Docker resources, https://stackoverflow.com/a/32723127/3865876
    docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

[ -e ~/.files/liquidprompt ] && . ~/.files/liquidprompt || true
